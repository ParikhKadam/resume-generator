{"version":3,"sources":["webpack:///./src/app/resume.service.ts","webpack:///./src/app/app.component.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/education/education.component.ts","webpack:///./src/app/experience/experience.component.ts","webpack:///./src/app/index.ts","webpack:///./src/app/resume/resume.component.ts","webpack:///./src/app/skill/skill.component.ts","webpack:///./src/app/summary/summary.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/education/education.component.css","webpack:///./src/app/experience/experience.component.css","webpack:///./src/app/resume/resume.component.css","webpack:///./src/app/skill/skill.component.css","webpack:///./src/app/summary/summary.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/education/education.component.html","webpack:///./src/app/experience/experience.component.html","webpack:///./src/app/resume/resume.component.html","webpack:///./src/app/skill/skill.component.html","webpack:///./src/app/summary/summary.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { DatePipe } from '@angular/common';\nimport { Resume, Position, Education, Skill } from './models'\n\n@Injectable()\nexport class ResumeService {\n\n  private STORAGE_KEY = 'resume';\n  private RESUME: Resume = {\n    name: 'Mats Roshauw',\n    title: 'Frontend engineer',\n    pictureUrl: 'https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/6/005/010/3a0/1d2671f.jpg',\n    summary: 'Good stuff dev',\n    email: 'karmats@gmail.com',\n    phone: '0730-825481',\n    positions: [{\n      company: 'Acando',\n      companyLogoUrl: 'https://media.licdn.com/media/AAEAAQAAAAAAAAeBAAAAJDViZDYyYTRmLWQ3YWUtNGRmZS04NTdlLTNlZTk2NTA0MmJiOA.png',\n      startDate: {\n        year: 2011,\n        month: 6\n      },\n      endDate: {\n        year: 2013,\n        month: 6\n      },\n      current: false,\n      summary: 'Consulting stuffs',\n      title: 'IT consultant'\n    }, {\n      company: 'Seal',\n      companyLogoUrl: 'https://media.licdn.com/media/AAEAAQAAAAAAAAcWAAAAJGNkMTU0MzMxLTQ1MWEtNDZmZS05NTE3LTAyMDI5MmEwNTg0MQ.png',\n      startDate: {\n        year: 2013,\n        month: 6\n      },\n      current: true,\n      summary: 'Frontend stuffs',\n      title: 'Frontend developer'\n    }],\n    educations: [{\n      degree: 'Bachelor',\n      school: 'Växjö Unversity',\n      startDate: {\n        year: 2003,\n        month: 8\n      },\n      endDate: {\n        year: 2006,\n        month: 6\n      },\n      field: 'Computer science'\n    }, {\n      degree: 'Master',\n      school: 'Chalmers Unversity',\n      startDate: {\n        year: 2006,\n        month: 8\n      },\n      endDate: {\n        year: 2007,\n        month: 1\n      },\n      field: 'Computer gaming'\n    }],\n    skills: [{\n      name: 'Angular',\n      competence: 90\n    }, {\n      name: 'React',\n      competence: 60\n    }, {\n      name: 'Javascript',\n      competence: 80\n    }]\n  }\n\n  // Years and months to choose from when adding new content to resume\n  years: Array<number> = [];\n  months: Array<string> = [];\n  // All posssible education degrees\n  readonly degrees: Array<string> = [\n      'Associate’s Degree',\n      'Bachelor’s Degree',\n      'Master’s Degree',\n      'Master of Business Administration (M.B.A)',\n      'Juris Doctor (J.D.)',\n      'Doctor of Medicine (M.D.)',\n      'Doctor of Philosophy (Ph.D.)',\n      'Engineer’s Degree',\n      'Other']\n\n  constructor() {\n    // Create years to choose from, 1950 - current years\n    const today = new Date();\n    for (let year = 1950; year <= today.getFullYear(); year++) {\n      this.years.push(year);\n    }\n    // To get the name of the month, use the browsers language and angular DatePipe,\n    // the position in the array will tell which js month it is\n    const datePipe = new DatePipe(navigator.language);\n    for (let month = 1; month <= 12; month++) {\n      let dateString = `2016-${month < 10 ? '0' : ''}${month}-15`;\n      this.months.push(datePipe.transform(dateString, 'MMMM '));\n    }\n  }\n\n  /**\n   * Saves resume in browser\n   * \n   * @param {Resume}  resume  The resume to store\n   */\n  saveResume(resume: Resume) {\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(resume));\n  }\n\n  /**\n   * Retrive last saved resume stored in browser\n   * \n   * @return {Resume}  Latest stored resume\n   */\n  retrieveResume(): Resume {\n    const resumeAsString = localStorage.getItem(this.STORAGE_KEY);\n    return resumeAsString ? JSON.parse(resumeAsString) : this.RESUME;\n  }\n\n  /**\n   * Adds a position to the saved resume and saves it.\n   * \n   * @param   {Position}  position  The position to add\n   * @return  {Array<Position>}     Updated positions array\n   */\n  addPosition(position: Position): Array<Position> {\n    const currentResume = this.retrieveResume();\n    currentResume.positions.push(position);\n    this.saveResume(currentResume);\n    return currentResume.positions;\n  }\n\n  /**\n   * Adds an education to the saved resume and saves it.\n   * \n   * @param   {Education}  education  The education to add\n   * @return  {Array<Education>}      Updated educations array\n   */\n  addEducation(education: Education): Array<Education> {\n    const currentResume = this.retrieveResume();\n    currentResume.educations.push(education);\n    this.saveResume(currentResume);\n    return currentResume.educations;\n  }\n\n  /**\n   * Adds a skill to the saved resume and saves it.\n   * \n   * @param   {Skill}  skill  The skill to add\n   * @return  {Array<Skill>}  Updated skills array\n   */\n  addSkill(skill: Skill): Array<Skill> {\n    const currentResume = this.retrieveResume();\n    currentResume.skills.push(skill);\n    this.saveResume(currentResume);\n    return currentResume.skills;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/resume.service.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 441;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 441\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { ResumeComponent } from './resume/resume.component';\nimport { SummaryComponent } from './summary/summary.component';\nimport { ExperienceComponent, NewPositionDialog } from './experience/experience.component';\nimport { EducationComponent, NewEducationDialog } from './education/education.component';\nimport { SkillComponent, NewSkillDialog } from './skill/skill.component';\n\nimport { ResumeService } from './resume.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResumeComponent,\n    SummaryComponent,\n    ExperienceComponent,\n    NewPositionDialog,\n    NewEducationDialog,\n    NewSkillDialog,\n    EducationComponent,\n    SkillComponent\n  ],\n  entryComponents: [\n    NewEducationDialog,\n    NewPositionDialog,\n    NewSkillDialog\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    MaterialModule.forRoot()\n  ],\n  providers: [ResumeService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, Input, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { Education } from '../models';\nimport { ResumeService } from '../resume.service'\n\n@Component({\n  selector: 'app-education',\n  templateUrl: './education.component.html',\n  styleUrls: ['./education.component.css']\n})\nexport class EducationComponent implements OnInit {\n  @Input() educations: Array<Education>;\n  months: Array<string>\n\n  constructor(private dialog: MdDialog, private resumeService: ResumeService) { }\n\n  ngOnInit() {\n    this.months = this.resumeService.months;\n  }\n\n  newEducation() {\n    const dialogRef = this.dialog.open(NewEducationDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!result) {\n        return;\n      }\n      if (result.current) {\n        result.endDate = null;\n      }\n      this.educations = this.resumeService.addEducation(result);\n    });\n  }\n}\n\n// Add new education dialog\n@Component({\n  template: `\n    <h3 class=\"dialog-header\">Add new education</h3>\n    <div class=\"dialog-content row\">\n      <md-input-container class=\"col-md-12\">\n        <input md-input\n          [(ngModel)]=\"education.school\"\n          placeholder=\"School\">\n      </md-input-container>\n      <md-input-container class=\"col-md-12\">\n        <input md-input\n          [(ngModel)]=\"education.field\"\n          placeholder=\"Field of Study\">\n      </md-input-container>\n      <md-select [(ngModel)]=\"education.degree\" placeholder=\"Degree\" class=\"col-md-12\">\n        <md-option *ngFor=\"let degree of degrees\" [value]=\"degree\"> {{degree}} </md-option>\n      </md-select>\n      <label class=\"col-md-6 select-label\">From</label>\n      <label class=\"col-md-6 select-label\">To</label>\n      <md-select [(ngModel)]=\"education.startDate.year\" placeholder=\"Year\" class=\"col-md-3\">\n        <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n      </md-select>\n      <md-select [(ngModel)]=\"education.startDate.month\" placeholder=\"Month\" class=\"col-md-3\">\n        <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n      </md-select>\n      <md-select *ngIf=\"!education.current\" [(ngModel)]=\"education.endDate.year\" placeholder=\"Year\" class=\"col-md-3\">\n        <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n      </md-select>\n      <md-select *ngIf=\"!education.current\" [(ngModel)]=\"education.endDate.month\" placeholder=\"Month\" class=\"col-md-3\">\n        <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n      </md-select>\n      <md-checkbox class=\"col-md-12\" [(ngModel)]=\"education.current\">\n        Current education\n      </md-checkbox>\n    </div>\n    <div class=\"dialog-footer\">\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">CANCEL</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(education)\">ADD</button>\n    </div>\n  `,\n})\nexport class NewEducationDialog {\n  public education: Education;\n  public years: Array<number>;\n  public months: Array<string>;\n  public degrees: Array<string>;\n\n  constructor(public dialogRef: MdDialogRef<NewEducationDialog>, private resumeService: ResumeService) {\n    const today = new Date();\n    this.education = {\n      school: '',\n      field: '',\n      current: true,\n      startDate: {\n        year: today.getFullYear(),\n        month: today.getMonth()\n      },\n      endDate: {\n        year: today.getFullYear(),\n        month: today.getMonth()\n      },\n      degree: 'Other'\n    }\n\n    this.years = resumeService.years;\n    this.months = resumeService.months;\n    this.degrees = resumeService.degrees;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/education/education.component.ts","import { Component, Input, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { Position } from '../models'\nimport { ResumeService } from '../resume.service';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html',\n  styleUrls: ['./experience.component.css']\n})\nexport class ExperienceComponent implements OnInit {\n  @Input() positions: Array<Position>;\n  months: Array<string>;\n\n  constructor(private dialog: MdDialog, private resumeService: ResumeService) { }\n\n  ngOnInit() {\n    this.months = this.resumeService.months;\n  }\n\n  newPosition() {\n    const dialogRef = this.dialog.open(NewPositionDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!result) {\n        return;\n      }\n      if (result.current) {\n        result.endDate = null;\n      }\n      this.positions = this.resumeService.addPosition(result);\n    });\n  }\n}\n\n// Add new position dialog\n@Component({\n  template: `\n    <h3 class=\"dialog-header\">Add new position</h3>\n    <div class=\"dialog-content row\">\n      <md-input-container class=\"col-md-12\">\n        <input md-input\n          [(ngModel)]=\"position.company\"\n          placeholder=\"Company\">\n      </md-input-container>\n      <md-input-container class=\"col-md-12\">\n        <input md-input\n          [(ngModel)]=\"position.companyLogoUrl\"\n          placeholder=\"Company Logo URL (Optional)\">\n      </md-input-container>\n      <md-input-container class=\"col-md-12\">\n        <input md-input\n          [(ngModel)]=\"position.title\"\n          placeholder=\"Title\">\n      </md-input-container>\n      <md-input-container class=\"col-md-12\">\n        <textarea md-input\n        [(ngModel)]=\"position.summary\"\n        placeholder=\"Summary\"></textarea>\n      </md-input-container>\n      <label class=\"col-md-6 select-label\">From</label>\n      <label class=\"col-md-6 select-label\">To</label>\n      <md-select [(ngModel)]=\"position.startDate.year\" placeholder=\"Year\" class=\"col-md-3\">\n        <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n      </md-select>\n      <md-select [(ngModel)]=\"position.startDate.month\" placeholder=\"Month\" class=\"col-md-3\">\n        <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n      </md-select>\n      <md-select *ngIf=\"!position.current\" [(ngModel)]=\"position.endDate.year\" placeholder=\"Year\" class=\"col-md-3\">\n        <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n      </md-select>\n      <md-select *ngIf=\"!position.current\" [(ngModel)]=\"position.endDate.month\" placeholder=\"Month\" class=\"col-md-3\">\n        <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n      </md-select>\n      <md-checkbox class=\"col-md-12\" [(ngModel)]=\"position.current\">\n        Current job\n      </md-checkbox>\n    </div>\n    <div class=\"dialog-footer\">\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">CANCEL</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(position)\">ADD</button>\n    </div>\n  `,\n})\nexport class NewPositionDialog {\n  public position: Position;\n  public years: Array<number>;\n  public months: Array<string>;\n\n  constructor(public dialogRef: MdDialogRef<NewPositionDialog>, private resumeService: ResumeService) {\n    const today = new Date();\n    this.position = {\n      company: '',\n      companyLogoUrl: '',\n      current: true,\n      startDate: {\n        year: today.getFullYear(),\n        month: today.getMonth()\n      },\n      endDate: {\n        year: today.getFullYear(),\n        month: today.getMonth()\n      },\n      summary: '',\n      title: ''\n    }\n\n    this.years = resumeService.years;\n    this.months = resumeService.months;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/experience/experience.component.ts","export * from './app.component';\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/index.ts","import { Component, OnInit } from '@angular/core';\nimport { ResumeService } from '../resume.service';\nimport { Resume } from '../models';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html',\n  styleUrls: ['./resume.component.css'],\n  providers: [ ResumeService ]\n})\nexport class ResumeComponent implements OnInit {\n\n  resume: Resume;\n\n  constructor(private resumeService: ResumeService) {\n  }\n\n  ngOnInit() {\n    this.resume = this.resumeService.retrieveResume();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/resume/resume.component.ts","import { Component, Input, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef } from '@angular/material';\nimport { ResumeService } from '../resume.service';\nimport { Skill } from '../models';\n\n@Component({\n  selector: 'app-skill',\n  templateUrl: './skill.component.html',\n  styleUrls: ['./skill.component.css']\n})\nexport class SkillComponent implements OnInit {\n  @Input() skills:Array<Skill>;\n  firstList: Array<Skill>;\n  secondList: Array<Skill>;\n\n  constructor(private dialog: MdDialog, private resumeService: ResumeService) {\n   }\n\n  ngOnInit() {\n    this.skillsToTwoLists();\n  }\n\n  newSkill() {\n    const dialogRef = this.dialog.open(NewSkillDialog);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!result) {\n        return;\n      }\n      this.skills = this.resumeService.addSkill(result);\n      this.skillsToTwoLists();\n    });\n  }\n\n  // Since skill lists are in two columns, split skill list to a tuple\n  skillsToTwoLists() {\n    [this.firstList, this.secondList] = this.skills.reduce((acc, curr, idx) => {\n      if (idx % 2 === 0) {\n        acc[0].push(curr);\n      } else {\n        acc[1].push(curr);\n      }\n      return acc;\n    },[[], []]);\n  }\n}\n\n// Add new skill dialog\n@Component({\n  template: `\n    <h3 class=\"dialog-header\">Add new skill</h3>\n    <div class=\"dialog-content row\">\n      <md-input-container class=\"col-md-12\">\n        <input md-input\n          [(ngModel)]=\"skill.name\"\n          placeholder=\"Competence name\">\n      </md-input-container>\n      <md-slider\n        class=\"col-md-12\"\n        [(ngModel)]=\"skill.competence\"\n        min=\"0\"\n        max=\"100\"\n        thumbLabel\n        step=\"10\"\n        tickInterval=\"1\"></md-slider>\n    </div>\n    <div class=\"dialog-footer\">\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">CANCEL</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(skill)\">ADD</button>\n    </div>\n  `,\n})\nexport class NewSkillDialog {\n  public skill: Skill;\n\n  constructor(public dialogRef: MdDialogRef<NewSkillDialog>, private resumeService: ResumeService) {\n    const today = new Date();\n    this.skill = {\n      competence: 0,\n      name: ''\n    }\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/skill/skill.component.ts","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html',\n  styleUrls: ['./summary.component.css']\n})\nexport class SummaryComponent implements OnInit {\n  @Input() name: string;\n  @Input('picture') profileUrl: string;\n  @Input() description: string;\n  @Input() title: string;\n  @Input() phone: string;\n  @Input() email: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/summary/summary.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 753\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/education/education.component.css\n// module id = 754\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/experience/experience.component.css\n// module id = 755\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/resume/resume.component.css\n// module id = 756\n// module chunks = 0","module.exports = \".skill-bar {\\n    margin-bottom: 30px;\\n    margin-top: 10px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/skill/skill.component.css\n// module id = 757\n// module chunks = 0","module.exports = \".summary {\\n    text-align: center;\\n    background: #3949ab;\\n    color: #fff;\\n    padding: 20px;\\n    margin: -30px;\\n}\\n.profile-picture {\\n    border-radius: 200px;\\n    width: 200px;\\n    height: 200px;\\n}\\n\\n.contact-info {\\n    margin-top: 40px;\\n}\\n.contact-info md-icon {\\n    vertical-align: middle;\\n}\\n.contact-info md-icon:not(:first-child) {\\n    margin-left: 20px;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/summary/summary.component.css\n// module id = 758\n// module chunks = 0","module.exports = \"<app-resume>\\n</app-resume>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 759\n// module chunks = 0","module.exports = \"<md-card>\\n  <md-list>\\n    <md-list-item *ngFor=\\\"let education of educations\\\">\\n      <b md-line>{{education.field}} - {{education.school}}</b>\\n      <i md-line>{{months[education.startDate.month] + ' ' + education.startDate.year}} - {{education.endDate ? (months[education.endDate.month] + ' ' + education.endDate.year) : 'Present'}}</i>\\n      <span md-line>{{education.degree}}</span>\\n    </md-list-item>\\n  </md-list>\\n  <md-card-actions>\\n    <button md-button color=\\\"primary\\\" (click)=\\\"newEducation()\\\">ADD EDUCATION</button>\\n  </md-card-actions>\\n</md-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/education/education.component.html\n// module id = 760\n// module chunks = 0","module.exports = \"<md-card>\\n  <md-list>\\n    <md-list-item *ngFor=\\\"let position of positions\\\">\\n      <img *ngIf=\\\"position.companyLogoUrl\\\" md-list-avatar [src]=\\\"position.companyLogoUrl\\\" alt=\\\"position.company\\\">\\n      <h3 md-line>{{position.title}} - {{position.company}}</h3>\\n      <p md-line>{{months[position.startDate.month] + ' ' + position.startDate.year}} - {{position.endDate ? (months[position.endDate.month] + ' ' + position.endDate.year) : 'Present'}}</p>\\n      <p md-line>{{position.summary}}</p>\\n    </md-list-item>\\n  </md-list>\\n  <md-card-actions>\\n    <button md-button color=\\\"primary\\\" (click)=\\\"newPosition()\\\">ADD POSITION</button>\\n  </md-card-actions>\\n</md-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/experience/experience.component.html\n// module id = 761\n// module chunks = 0","module.exports = \"<!-- Summary -->\\n<div class=\\\"app-content\\\">\\n    <app-summary [picture]=\\\"resume.pictureUrl\\\" [name]=\\\"resume.name\\\" [description]=\\\"resume.summary\\\" [title]=\\\"resume.title\\\" [phone]=\\\"resume.phone\\\"\\n        [email]=\\\"resume.email\\\">\\n    </app-summary>\\n\\n    <!-- Work experience -->\\n    <app-experience [positions]=\\\"resume.positions\\\">\\n    </app-experience>\\n\\n    <!-- Education -->\\n    <app-education [educations]=\\\"resume.educations\\\">\\n    </app-education>\\n\\n    <!-- Skills -->\\n    <app-skill [skills]=\\\"resume.skills\\\">\\n    </app-skill>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/resume/resume.component.html\n// module id = 762\n// module chunks = 0","module.exports = \"<md-card>\\n  <div class=\\\"row\\\">\\n    <div *ngFor=\\\"let skill of firstList\\\" class=\\\"col-md-6 col-xs-12\\\">\\n      <span>{{skill.name}}</span>\\n      <md-progress-bar class=\\\"skill-bar\\\" mode=\\\"determinate\\\" value=\\\"{{skill.competence}}\\\"></md-progress-bar>\\n    </div>\\n    <div *ngFor=\\\"let skill of secondList\\\" class=\\\"col-md-6 col-xs-12\\\">\\n      <span>{{skill.name}}</span>\\n      <md-progress-bar class=\\\"skill-bar\\\" mode=\\\"determinate\\\" value=\\\"{{skill.competence}}\\\"></md-progress-bar>\\n    </div>\\n  </div>\\n  <md-card-actions>\\n    <button md-button color=\\\"primary\\\" (click)=\\\"newSkill()\\\">ADD SKILL</button>\\n  </md-card-actions>\\n</md-card>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/skill/skill.component.html\n// module id = 763\n// module chunks = 0","module.exports = \"<div class=\\\"summary\\\">\\n    <img class=\\\"profile-picture\\\" [src]=\\\"profileUrl\\\" alt=\\\"Profile picture\\\">\\n    <h2>{{name}}</h2>\\n    <i>{{title}}</i>\\n    <p>{{description}}</p>\\n    <p class=\\\"contact-info\\\">\\n        <md-icon>phone</md-icon> {{phone}}\\n        <md-icon>email</md-icon> {{email}}\\n    </p>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/summary/summary.component.html\n// module id = 764\n// module chunks = 0"],"sourceRoot":""}