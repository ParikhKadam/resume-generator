{"version":3,"sources":["/Users/mats/Development/projects/other/resume-generator/src/$_gendir lazy","/Users/mats/Development/projects/other/resume-generator/src/app/app.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/app.component.ts","/Users/mats/Development/projects/other/resume-generator/src/app/app.module.ts","/Users/mats/Development/projects/other/resume-generator/src/app/confirm-dialog/confirm-dialog.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/confirm-dialog/confirm-dialog.component.ts","/Users/mats/Development/projects/other/resume-generator/src/app/education/education.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/education/education.component.ts","/Users/mats/Development/projects/other/resume-generator/src/app/experience/experience.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/experience/experience.component.ts","/Users/mats/Development/projects/other/resume-generator/src/app/project/project.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/project/project.component.ts","/Users/mats/Development/projects/other/resume-generator/src/app/resume.service.ts","/Users/mats/Development/projects/other/resume-generator/src/app/resume/resume.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/resume/resume.component.ts","/Users/mats/Development/projects/other/resume-generator/src/app/skill/skill.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/skill/skill.component.ts","/Users/mats/Development/projects/other/resume-generator/src/app/summary/summary.component.html","/Users/mats/Development/projects/other/resume-generator/src/app/summary/summary.component.ts","/Users/mats/Development/projects/other/resume-generator/src/environments/environment.ts","/Users/mats/Development/projects/other/resume-generator/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\treturn new Promise(function(resolve, reject) { reject(new Error(\"Cannot find module '\" + req + \"'.\")); });\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<app-resume>\\n</app-resume>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { MaterialModule } from '@angular/material';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport 'hammerjs';\n\nimport { AppComponent } from './app.component';\nimport { ResumeComponent } from './resume/resume.component';\nimport { SummaryComponent, EditSummaryDialog } from './summary/summary.component';\nimport { ExperienceComponent, PositionDialog } from './experience/experience.component';\nimport { EducationComponent, EducationDialog } from './education/education.component';\nimport { SkillComponent, SkillDialog } from './skill/skill.component';\n\nimport { ResumeService } from './resume.service';\nimport { ConfirmDialogComponent } from './confirm-dialog/confirm-dialog.component';\nimport { ProjectComponent, ProjectDialog } from './project/project.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ResumeComponent,\n    SummaryComponent,\n    EditSummaryDialog,\n    ExperienceComponent,\n    PositionDialog,\n    EducationDialog,\n    SkillDialog,\n    EducationComponent,\n    SkillComponent,\n    ProjectComponent,\n    ProjectDialog,\n    ConfirmDialogComponent\n  ],\n  entryComponents: [\n    EducationDialog,\n    PositionDialog,\n    SkillDialog,\n    EditSummaryDialog,\n    ProjectDialog,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MaterialModule\n  ],\n  providers: [ResumeService, Location, { provide: LocationStrategy, useClass: PathLocationStrategy }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/app.module.ts","module.exports = \"<h3 md-dialog-title>Confirm</h3>\\n<div md-dialog-content>\\n  {{ message }}\\n</div>\\n<div md-dialog-actions>\\n  <button md-button color=\\\"primary\\\" (click)=\\\"dialogRef.close(false)\\\">Cancel</button>\\n  <button md-button color=\\\"primary\\\" (click)=\\\"dialogRef.close(true)\\\">Ok</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/confirm-dialog/confirm-dialog.component.html\n// module id = ../../../../../src/app/confirm-dialog/confirm-dialog.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MdDialogRef } from '@angular/material';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html'\n})\nexport class ConfirmDialogComponent implements OnInit {\n  public message: string;\n\n  constructor(public dialogRef: MdDialogRef<ConfirmDialogComponent>) { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/confirm-dialog/confirm-dialog.component.ts","module.exports = \"<div class=\\\"section\\\">\\n  <h1><md-icon>school</md-icon>Education</h1>\\n  <md-card>\\n    <md-list>\\n      <md-list-item *ngFor=\\\"let education of educations\\\">\\n        <h3 md-line>{{education.field}} - {{education.school}}</h3>\\n        <p md-line class=\\\"date-label\\\">{{months[education.startDate.month] + ' ' + education.startDate.year}} - {{education.endDate ? (months[education.endDate.month] + ' ' + education.endDate.year) : 'Present'}}</p>\\n        <p md-line>{{education.degree ? education.degree : '-'}}</p>\\n        <button *ngIf=\\\"resumeService.editMode\\\" md-icon-button color=\\\"primary\\\" (click)=\\\"editEducation(education)\\\">\\n          <md-icon>edit</md-icon>\\n        </button>\\n        <button *ngIf=\\\"resumeService.editMode\\\" md-icon-button color=\\\"primary\\\" (click)=\\\"deleteEducation(education)\\\">\\n          <md-icon>delete</md-icon>\\n        </button>\\n      </md-list-item>\\n    </md-list>\\n    <md-card-actions *ngIf=\\\"resumeService.editMode\\\">\\n      <button md-button color=\\\"primary\\\" (click)=\\\"newEducation()\\\">Add Education</button>\\n    </md-card-actions>\\n  </md-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/education/education.component.html\n// module id = ../../../../../src/app/education/education.component.html\n// module chunks = main","import { Component, Input, ViewContainerRef, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef, MdDialogConfig } from '@angular/material';\nimport { FormControl } from '@angular/forms';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/operator/map';\n\nimport { Education } from '../models';\nimport { ResumeService } from '../resume.service'\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-education',\n  templateUrl: './education.component.html'\n})\nexport class EducationComponent implements OnInit {\n  @Input() educations: Array<Education>;\n  months: Array<string>\n\n  constructor(private dialog: MdDialog, private viewContainerRef: ViewContainerRef, private resumeService: ResumeService) { }\n\n  ngOnInit() {\n    this.months = this.resumeService.months;\n    this.educations = this.educations || [];\n    this.sortEducations();\n  }\n\n  newEducation() {\n    const config = new MdDialogConfig();\n    config.width = \"75vw\";\n\n    const dialogRef = this.dialog.open(EducationDialog, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        result.endDate = result.current ? null : result.endDate;\n        this.educations = this.resumeService.addEducation(result);\n        this.sortEducations();\n      }\n    });\n  }\n\n  editEducation(education: Education) {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n    config.width = \"75vw\";\n\n    const dialogRef = this.dialog.open(EducationDialog, config);\n    dialogRef.componentInstance.education = education;\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.educations = result ? this.resumeService.updateEducations(this.educations) :\n                  this.resumeService.retrieveResume().educations;\n      this.sortEducations();\n    });\n  }\n\n  deleteEducation(education: Education) {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, config);\n    dialogRef.componentInstance.message = `Are you sure you want to remove your work education at ${education.school}?`;\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.educations = this.resumeService.removeEducation(education);\n      }\n    })\n  }\n\n  // Sort by start date\n  sortEducations() {\n    this.educations.sort((a, b) => {\n      return b.startDate.year - a.startDate.year ? b.startDate.year - a.startDate.year :\n        b.startDate.month - a.startDate.month;\n    });\n  }\n\n}\n\n// Add new education dialog\n@Component({\n  template: `\n    <h3 md-dialog-title>{{editMode ? 'Edit ' : 'Add new '}}education</h3>\n    <div md-dialog-content fxLayout=\"column\">\n\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"education.school\"\n          placeholder=\"School\">\n      </md-input-container>\n\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"education.field\"\n          placeholder=\"Field of Study\">\n      </md-input-container>\n\n      <md-input-container>\n        <input mdInput\n              [(ngModel)]=\"education.degree\"\n              placeholder=\"Degree\"\n              [formControl]=\"degreeCtrl\"\n              [mdAutocomplete]=\"auto\">\n      </md-input-container>\n      <md-autocomplete #auto=\"mdAutocomplete\">\n        <md-option *ngFor=\"let degree of filteredDegrees | async\" [value]=\"degree\">\n          {{ degree }}\n        </md-option>\n      </md-autocomplete>\n\n      <div class=\"date-container\">\n        <label>From</label>\n        <div fxLayout=\"row\">\n          <md-select fxFlex=\"50\" [(ngModel)]=\"education.startDate.year\" placeholder=\"Year\">\n            <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n          </md-select>\n          <md-select fxFlex=\"50\" [(ngModel)]=\"education.startDate.month\" placeholder=\"Month\">\n            <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n          </md-select>\n        </div>\n      </div>\n      <md-checkbox [(ngModel)]=\"education.current\" (change)=\"currentChanged()\">\n        Current education\n      </md-checkbox>\n      <div class=\"date-container\" *ngIf=\"!education.current\">\n        <label>To</label>\n        <div fxLayout=\"row\">\n          <md-select fxFlex=\"50\" [(ngModel)]=\"education.endDate.year\" placeholder=\"Year\">\n            <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n          </md-select>\n          <md-select fxFlex=\"50\" [(ngModel)]=\"education.endDate.month\" placeholder=\"Month\">\n            <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n          </md-select>\n        </div>\n      </div>\n    </div>\n\n    <div md-dialog-actions>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">Cancel</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(education)\">Save</button>\n    </div>\n  `,\n})\nexport class EducationDialog implements OnInit {\n  degreeCtrl:FormControl;\n  degrees: Array<string>;\n  filteredDegrees: Observable<Array<string>>;\n\n  education: Education;\n  years: Array<number>;\n  months: Array<string>;\n  editMode: boolean;\n\n  constructor(public dialogRef: MdDialogRef<EducationDialog>, private resumeService: ResumeService) {\n    this.degreeCtrl = new FormControl();\n    this.filteredDegrees = this.degreeCtrl.valueChanges\n        .startWith(null)\n        .map(val => this.filterDegrees(val));\n\n    this.education = {\n      school: '',\n      field: '',\n      current: true,\n      startDate: this.resumeService.todayAsYearMonth(),\n      endDate: this.resumeService.todayAsYearMonth(),\n      degree: ''\n    }\n\n    this.years = resumeService.years;\n    this.months = resumeService.months;\n    this.degrees = resumeService.degrees;\n  }\n\n  ngOnInit() {\n    // Assume edit mode if school isn't blank\n    this.editMode = this.education && this.education.school.length > 0;\n  }\n\n  filterDegrees(val: string) {\n    return val ? this.degrees.filter((s) => new RegExp(val, 'gi').test(s)) : this.degrees;\n  }\n\n  currentChanged() {\n    if (!this.education.current && !this.education.endDate) {\n      this.education.endDate = this.resumeService.todayAsYearMonth();\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/education/education.component.ts","module.exports = \"<div class=\\\"section\\\">\\n  <h1><md-icon>work</md-icon>Work experience</h1>\\n  <md-card>\\n    <md-list>\\n      <md-list-item *ngFor=\\\"let position of positions\\\">\\n        <h3 md-line>{{position.title}} - {{position.company}}</h3>\\n        <p md-line class=\\\"date-label\\\">{{months[position.startDate.month] + ' ' + position.startDate.year}} - {{position.endDate ? (months[position.endDate.month] + ' ' + position.endDate.year) : 'Present'}}</p>\\n        <p md-line [mdTooltip]=\\\"position.summary\\\">{{position.summary ? position.summary : '-'}}</p>\\n        <button *ngIf=\\\"resumeService.editMode\\\" md-icon-button color=\\\"primary\\\" (click)=\\\"editPosition(position)\\\">\\n          <md-icon>edit</md-icon>\\n        </button>\\n        <button *ngIf=\\\"resumeService.editMode\\\" md-icon-button color=\\\"primary\\\" (click)=\\\"deletePosition(position)\\\">\\n          <md-icon>delete</md-icon>\\n        </button>\\n      </md-list-item>\\n    </md-list>\\n    <md-card-actions *ngIf=\\\"resumeService.editMode\\\">\\n      <button md-button color=\\\"primary\\\" (click)=\\\"newPosition()\\\">Add Position</button>\\n    </md-card-actions>\\n  </md-card>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/experience/experience.component.html\n// module id = ../../../../../src/app/experience/experience.component.html\n// module chunks = main","import { Component, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { MdDialog, MdDialogRef, MdDialogConfig } from '@angular/material';\n\nimport { Position } from '../models'\nimport { ResumeService } from '../resume.service';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-experience',\n  templateUrl: './experience.component.html'\n})\nexport class ExperienceComponent implements OnInit {\n  @Input() positions: Array<Position>;\n  months: Array<string>;\n\n  constructor(private dialog: MdDialog, private viewContainerRef: ViewContainerRef, private resumeService: ResumeService) { }\n\n  ngOnInit() {\n    this.months = this.resumeService.months;\n    this.positions = this.positions || [];\n    this.sortPositions();\n  }\n\n  newPosition() {\n    const config = new MdDialogConfig();\n    config.width = \"75vw\";\n\n    const dialogRef = this.dialog.open(PositionDialog, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        result.endDate = result.current ? null : result.endDate;\n        this.positions = this.resumeService.addPosition(result);\n        this.sortPositions();\n      }\n    });\n  }\n\n  editPosition(position: Position) {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n    config.width = \"75vw\";\n\n    const dialogRef = this.dialog.open(PositionDialog, config);\n    dialogRef.componentInstance.position = position;\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.positions = result ? this.resumeService.updatePositions(this.positions) : \n            this.resumeService.retrieveResume().positions;\n      this.sortPositions();\n    });\n  }\n\n  deletePosition(position: Position) {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, config);\n    dialogRef.componentInstance.message = `Are you sure you want to remove your work experience at ${position.company}?`;\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.positions = this.resumeService.removePosition(position);\n      }\n    })\n  }\n\n  // Sort by start date\n  sortPositions() {\n    this.positions.sort((a, b) => {\n      return b.startDate.year - a.startDate.year ? b.startDate.year - a.startDate.year :\n        b.startDate.month - a.startDate.month;\n    });\n  }\n\n}\n\n// Add new position dialog\n@Component({\n  template: `\n    <h3 md-dialog-title>{{ editMode ? 'Edit ' : 'Add new '}}position</h3>\n    <div md-dialog-content fxLayout=\"column\">\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"position.company\"\n          placeholder=\"Company\">\n      </md-input-container>\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"position.title\"\n          placeholder=\"Title\">\n      </md-input-container>\n      <md-input-container>\n        <textarea mdInput\n        [(ngModel)]=\"position.summary\"\n        rows=\"4\" placeholder=\"Summary\"></textarea>\n      </md-input-container>\n      <div class=\"date-container\">\n        <label>From</label>\n        <div fxLayout=\"row\">\n          <md-select fxFlex=\"50\" [(ngModel)]=\"position.startDate.year\" placeholder=\"Year\">\n            <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n          </md-select>\n          <md-select fxFlex=\"50\" [(ngModel)]=\"position.startDate.month\" placeholder=\"Month\">\n            <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n          </md-select>\n        </div>\n      </div>\n      <md-checkbox [(ngModel)]=\"position.current\" (change)=\"currentChanged()\">\n        Current job\n      </md-checkbox>\n      <div class=\"date-container\" *ngIf=\"!position.current\">\n        <label>To</label>\n        <div fxLayout=\"row\">\n          <md-select fxFlex=\"50\" [(ngModel)]=\"position.endDate.year\" placeholder=\"Year\">\n            <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n          </md-select>\n          <md-select fxFlex=\"50\" [(ngModel)]=\"position.endDate.month\" placeholder=\"Month\">\n            <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n          </md-select>\n        </div>\n      </div>\n    </div>\n    <div md-dialog-actions>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">Cancel</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(position)\">Save</button>\n    </div>\n  `,\n})\nexport class PositionDialog implements OnInit {\n  public position: Position;\n  public years: Array<number>;\n  public months: Array<string>;\n  public editMode: boolean;\n\n  constructor(public dialogRef: MdDialogRef<PositionDialog>, private resumeService: ResumeService) {\n    this.position = {\n      company: '',\n      current: true,\n      startDate: this.resumeService.todayAsYearMonth(),\n      endDate: this.resumeService.todayAsYearMonth(),\n      summary: '',\n      title: ''\n    }\n\n    this.years = resumeService.years;\n    this.months = resumeService.months;\n  }\n\n  ngOnInit() {\n    // Assume edit mode if company isn't blank\n    this.editMode = this.position && this.position.company.length > 0;\n  }\n\n  currentChanged() {\n    if (!this.position.current && !this.position.endDate) {\n      this.position.endDate = this.resumeService.todayAsYearMonth();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/experience/experience.component.ts","module.exports = \"<div class=\\\"section\\\">\\n  <h1><md-icon>trending_up</md-icon>Projects</h1>\\n  <div *ngIf=\\\"resumeService.editMode\\\">\\n    <button md-raised-button color=\\\"primary\\\" (click)=\\\"newProject()\\\" *ngIf=\\\"resumeService.editMode\\\">Add Project</button>\\n  </div>\\n  <div class=\\\"masonry\\\">\\n    <div class=\\\"item\\\" *ngFor=\\\"let project of projects\\\">\\n      <md-card>\\n        <md-card-header>\\n          <md-card-title>{{project.name}}</md-card-title>\\n          <md-card-subtitle>\\n            {{ months[project.startDate.month] + ' ' + project.startDate.year}} - {{project.endDate ? (months[project.endDate.month] + ' ' + project.endDate.year) : 'Present' }}\\n          </md-card-subtitle>\\n        </md-card-header>\\n        <img *ngIf=\\\"project.imageUrl\\\" md-card-image [src]=\\\"project.imageUrl\\\">\\n        <md-card-content>\\n          <p>\\n            {{ project.description }}\\n          </p>\\n        </md-card-content>\\n        <md-card-actions>\\n          <a md-button color=\\\"primary\\\" [href]=\\\"project.web\\\" target=\\\"_project\\\" *ngIf=\\\"project.web\\\">Visit Page</a>\\n          <button md-button color=\\\"primary\\\" (click)=\\\"editProject(project)\\\" *ngIf=\\\"resumeService.editMode\\\"><md-icon>edit</md-icon></button>\\n          <button md-button color=\\\"primary\\\" (click)=\\\"deleteProject(project)\\\" *ngIf=\\\"resumeService.editMode\\\"><md-icon>delete</md-icon></button>\\n        </md-card-actions>\\n      </md-card>\\n    </div>\\n  </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/project/project.component.html\n// module id = ../../../../../src/app/project/project.component.html\n// module chunks = main","import { Component, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { MdDialog, MdDialogConfig, MdDialogRef } from '@angular/material';\n\nimport { Project } from '../models';\nimport { ResumeService } from '../resume.service'\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html'\n})\nexport class ProjectComponent implements OnInit {\n  @Input() projects: Array<Project>;\n  months: Array<string>;\n\n  constructor(private dialog: MdDialog, private viewContainerRef: ViewContainerRef, private resumeService: ResumeService) { }\n\n  ngOnInit() {\n    this.projects = this.projects || [];\n    this.months = this.resumeService.months;\n    this.sortProjects();\n  }\n\n  newProject() {\n    const config = new MdDialogConfig();\n    config.width = \"75vw\";\n\n    const dialogRef = this.dialog.open(ProjectDialog, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        result.endDate = result.current ? null : result.endDate;\n        this.projects = this.resumeService.addProject(result);\n        this.sortProjects();\n      }\n    });\n  }\n\n  editProject(project: Project) {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n    config.width = \"75vw\";\n\n    const dialogRef = this.dialog.open(ProjectDialog, config);\n    dialogRef.componentInstance.project = project;\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.projects = result ? this.resumeService.updateProjects(this.projects) :\n                  this.resumeService.retrieveResume().projects;\n      this.sortProjects();\n    });\n  }\n\n  deleteProject(project: Project) {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, config);\n    dialogRef.componentInstance.message = `Are you sure you want to remove your project ${project.name}?`;\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.projects = this.resumeService.removeProject(project);\n      }\n    })\n  }\n\n  // Sort by start date\n  sortProjects() {\n    this.projects.sort((a, b) => {\n      return b.startDate.year - a.startDate.year ? b.startDate.year - a.startDate.year :\n        b.startDate.month - a.startDate.month;\n    });\n  }\n\n}\n\n// Add new project dialog\n@Component({\n  template: `\n    <h3 md-dialog-title>{{editMode ? 'Edit ' : 'Add new '}}project</h3>\n    <div md-dialog-content fxLayout=\"column\">\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"project.name\"\n          placeholder=\"Project name\">\n      </md-input-container>\n      <md-input-container>\n        <textarea mdInput\n          rows=\"4\"\n          [(ngModel)]=\"project.description\"\n          placeholder=\"Project description\">\n        </textarea>\n      </md-input-container>\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"project.imageUrl\"\n          placeholder=\"Project logo url (Optional)\">\n      </md-input-container>\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"project.web\"\n          placeholder=\"Project website (Optional)\">\n      </md-input-container>\n      <div class=\"date-container\">\n        <label class=\"select-label\">From</label>\n        <div fxLayout=\"row\">\n          <md-select fxFlex=\"50\" [(ngModel)]=\"project.startDate.year\" placeholder=\"Year\">\n            <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n          </md-select>\n          <md-select fxFlex=\"50\" [(ngModel)]=\"project.startDate.month\" placeholder=\"Month\">\n            <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n          </md-select>\n        </div>\n      </div>\n      <md-checkbox [(ngModel)]=\"project.current\" (change)=\"currentChanged()\">\n        Current project\n      </md-checkbox>\n      <div class=\"date-container\" *ngIf=\"!project.current\">\n        <label class=\"select-label\">To</label>\n        <div fxLayout=\"row\">\n          <md-select fxFlex=\"50\" [(ngModel)]=\"project.endDate.year\" placeholder=\"Year\">\n            <md-option *ngFor=\"let year of years\" [value]=\"year\"> {{year}} </md-option>\n          </md-select>\n          <md-select fxFlex=\"50\" [(ngModel)]=\"project.endDate.month\" placeholder=\"Month\">\n            <md-option *ngFor=\"let month of months\" [value]=\"months.indexOf(month)\"> {{month}} </md-option>\n          </md-select>\n        </div>\n      </div>\n    </div>\n    <div md-dialog-actions>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">Cancel</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(project)\">Save</button>\n    </div>\n  `,\n})\nexport class ProjectDialog implements OnInit {\n  public project: Project;\n  public years: Array<number>;\n  public months: Array<string>;\n  public editMode: boolean;\n\n  constructor(public dialogRef: MdDialogRef<ProjectDialog>, private resumeService: ResumeService) {\n    this.project = {\n      name: '',\n      description: '',\n      imageUrl: '',\n      web: '',\n      current: true,\n      startDate: this.resumeService.todayAsYearMonth(),\n      endDate: this.resumeService.todayAsYearMonth()\n    }\n\n    this.years = resumeService.years;\n    this.months = resumeService.months;\n  }\n\n  ngOnInit() {\n    // Assume edit mode if name isn't blank\n    this.editMode = this.project && this.project.name.length > 0;\n  }\n\n  currentChanged() {\n    if (!this.project.current && !this.project.endDate) {\n      this.project.endDate = this.resumeService.todayAsYearMonth();\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/project/project.component.ts","import { EventEmitter, Injectable } from '@angular/core';\nimport { DatePipe, Location } from '@angular/common';\nimport { Resume, Position, Education, Skill, Project, YearAndMonth } from './models'\n\n@Injectable()\nexport class ResumeService {\n  public resumeChanged: EventEmitter<Resume>;\n\n  private STORAGE_KEY = 'resume';\n  private THEME_KEY = 'theme';\n\n  private RESUME: Resume = {\n    name: 'Mats Roshauw',\n    title: 'Frontend engineer',\n    pictureUrl: 'https://media.licdn.com/mpr/mpr/shrinknp_400_400/p/6/005/010/3a0/1d2671f.jpg',\n    summary: 'Good stuff dev',\n    email: 'mats@mail.com',\n    phone: '0707-777777',\n    positions: [{\n      company: 'Acando',\n      startDate: {\n        year: 2011,\n        month: 6\n      },\n      endDate: {\n        year: 2013,\n        month: 6\n      },\n      current: false,\n      summary: 'Consulting stuffs',\n      title: 'IT consultant'\n    }, {\n      company: 'Seal',\n      startDate: {\n        year: 2013,\n        month: 6\n      },\n      current: true,\n      summary: 'Frontend stuffs',\n      title: 'Frontend developer'\n    }],\n    educations: [{\n      degree: 'Bachelor',\n      school: 'Växjö Unversity',\n      startDate: {\n        year: 2003,\n        month: 8\n      },\n      endDate: {\n        year: 2006,\n        month: 6\n      },\n      field: 'Computer science'\n    }, {\n      degree: 'Master',\n      school: 'Chalmers Unversity',\n      startDate: {\n        year: 2006,\n        month: 8\n      },\n      endDate: {\n        year: 2007,\n        month: 1\n      },\n      field: 'Computer gaming'\n    }],\n    projects: [{\n      name: 'GoCD monitor',\n      description: 'Build monitor for Go cd build server. Techniques included ReactJS and NodeJS',\n      startDate: {\n        year: 2016,\n        month: 1\n      },\n      current: true,\n      imageUrl: 'https://www.gocd.io/assets/images/blog/gocd-versions/gocd_15_2-d6c97247.png',\n      web: 'https://github.com/karmats/gocd-monitor'\n    },\n    {\n      name: 'Resume Generator',\n      description: 'Generates a resume in material design, that can be stored and put up on your website. Written in Angular 2.',\n      startDate: {\n        year: 2016,\n        month: 10\n      },\n      current: true,\n      imageUrl: 'https://d13yacurqjgara.cloudfront.net/users/36126/screenshots/2228873/rb-logo_1x.png',\n      web: 'https://github.com/karmats/resume-generator'\n    }],\n    skills: [{\n      name: 'Angular',\n      competence: 90\n    }, {\n      name: 'React',\n      competence: 60\n    }, {\n      name: 'Javascript',\n      competence: 80\n    }]\n  }\n\n  // Years and months to choose from when adding new content to resume\n  years: Array<number> = [];\n  months: Array<string> = [];\n  // All posssible education degrees\n  readonly degrees: Array<string> = [\n    'Associate’s Degree',\n    'Bachelor’s Degree',\n    'Master’s Degree',\n    'Master of Business Administration (M.B.A)',\n    'Juris Doctor (J.D.)',\n    'Doctor of Medicine (M.D.)',\n    'Doctor of Philosophy (Ph.D.)',\n    'Engineer’s Degree',\n    'Other']\n\n  // If in edit mode, possible to edit\n  editMode: boolean;\n\n  constructor(location: Location) {\n    // EventEmitter to let components know when the resume is changed\n    this.resumeChanged = new EventEmitter(false);\n\n    // Create years to choose from, 1950 - current years\n    const today = new Date();\n    for (let year = 1950; year <= today.getFullYear(); year++) {\n      this.years.push(year);\n    }\n    // To get the name of the month, use the browsers language and angular DatePipe,\n    // the position in the array will tell which js month it is\n    const datePipe = new DatePipe(navigator.language);\n    for (let month = 1; month <= 12; month++) {\n      let dateString = `2016-${month < 10 ? '0' : ''}${month}-15`;\n      this.months.push(datePipe.transform(dateString, 'MMMM '));\n    }\n\n    // Edit mode if path is /edit\n    this.editMode = location.isCurrentPathEqualTo('/?edit');\n  }\n\n  /**\n   * Saves resume in browser\n   * \n   * @param {Resume}  resume  The resume to store\n   */\n  saveResume(resume: Resume) {\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(resume));\n  }\n\n  /**\n   * Retrive last saved resume stored in browser\n   * \n   * @return {Resume}  Latest stored resume\n   */\n  retrieveResume(): Resume {\n    const resumeAsString = localStorage.getItem(this.STORAGE_KEY);\n    return resumeAsString ? JSON.parse(resumeAsString) : this.RESUME;\n  }\n\n  /**\n   * Adds a position to the saved resume and saves it.\n   * \n   * @param   {Position}  position  The position to add\n   * @return  {Array<Position>}     Updated positions array\n   */\n  addPosition(position: Position): Array<Position> {\n    const currentResume = this.retrieveResume();\n    currentResume.positions.push(position);\n    this.saveResume(currentResume);\n    return currentResume.positions;\n  }\n\n  /**\n   * Update positions.\n   * \n   * @param   {Array<Position>}   positions   The positons to update resume with\n   * @return  {Array<Position>}               Updated positions\n   */\n  updatePositions(positions: Array<Position>): Array<Position> {\n    const currentResume = this.retrieveResume();\n    currentResume.positions = positions;\n    this.saveResume(currentResume);\n    return currentResume.positions;\n  }\n\n  /**\n   * Removes a position.\n   * \n   * @param   {Position}        position  The position to remove\n   * @return  {Array<Position>}           Positions after the deletion\n   */\n  removePosition(position: Position): Array<Position> {\n    const currentResume = this.retrieveResume();\n    currentResume.positions = currentResume.positions.filter(p => p.company !== position.company);\n    this.saveResume(currentResume);\n    return currentResume.positions;\n  }\n\n  /**\n   * Adds an education to the saved resume and saves it.\n   * \n   * @param   {Education}  education  The education to add\n   * @return  {Array<Education>}      Updated educations array\n   */\n  addEducation(education: Education): Array<Education> {\n    const currentResume = this.retrieveResume();\n    currentResume.educations.push(education);\n    this.saveResume(currentResume);\n    return currentResume.educations;\n  }\n\n  /**\n   * Update educations.\n   * \n   * @param   {Array<Education>}   educations   The educations to update resume with\n   * @return  {Array<Education>}                Updated educations\n   */\n  updateEducations(educations: Array<Education>): Array<Education> {\n    const currentResume = this.retrieveResume();\n    currentResume.educations = educations;\n    this.saveResume(currentResume);\n    return currentResume.educations;\n  }\n\n  /**\n   * Removes an education.\n   * \n   * @param   {Education}        education  The education to remove\n   * @return  {Array<Education>}            Educations after the deletion\n   */\n  removeEducation(education: Education): Array<Education> {\n    const currentResume = this.retrieveResume();\n    currentResume.educations = currentResume.educations.filter(e => e.school !== education.school);\n    this.saveResume(currentResume);\n    return currentResume.educations;\n  }\n\n  /**\n   * Adds a skill to the saved resume and saves it.\n   * \n   * @param   {Skill}  skill  The skill to add\n   * @return  {Array<Skill>}  Updated skills array\n   */\n  addSkill(skill: Skill): Array<Skill> {\n    const currentResume = this.retrieveResume();\n    currentResume.skills.push(skill);\n    this.saveResume(currentResume);\n    return currentResume.skills;\n  }\n\n  /**\n   * Update skills.\n   * \n   * @param   {Array<Skill>}   skills     The skills to update resume with\n   * @return  {Array<Skill>}              Updated skills\n   */\n  updateSkills(skills: Array<Skill>): Array<Skill> {\n    const currentResume = this.retrieveResume();\n    currentResume.skills = skills;\n    this.saveResume(currentResume);\n    return currentResume.skills;\n  }\n\n  /**\n   * Removes a skill.\n   * \n   * @param   {Skill}             skill   The skill to remove\n   * @return  {Array<Skill>}              Skills after the deletion\n   */\n  removeSkill(skill: Skill): Array<Skill> {\n    const currentResume = this.retrieveResume();\n    currentResume.skills = currentResume.skills.filter(s => s.name !== skill.name);\n    this.saveResume(currentResume);\n    return currentResume.skills;\n  }\n\n  /**\n   * Adds a project to the saved resume and saves it.\n   * \n   * @param   {Project}         project   The project to add\n   * @return  {Array<Project>}            Updated projects array\n   */\n  addProject(project: Project): Array<Project> {\n    const currentResume = this.retrieveResume();\n    currentResume.projects.push(project);\n    this.saveResume(currentResume);\n    return currentResume.projects;\n  }\n\n  /**\n   * Update projects.\n   * \n   * @param   {Array<Project>}    projects     The projects to update resume with\n   * @return  {Array<Project>}                 Updated projects\n   */\n  updateProjects(projects: Array<Project>): Array<Project> {\n    const currentResume = this.retrieveResume();\n    currentResume.projects = projects;\n    this.saveResume(currentResume);\n    return currentResume.projects;\n  }\n\n  /**\n   * Stores current app theme\n   * \n   * @param themeName Name of the theme (css-class)\n   * @param isDark    True if it's dark themed\n   */\n  updateTheme(themeName: string, isDark: boolean) {\n    localStorage.setItem(this.THEME_KEY, JSON.stringify({themeName: themeName, isDark: isDark}));\n  }\n\n  /**\n   * Retrieve last saved theme\n   * \n   * @return Theme name and if it's dark\n   */\n  retrieveTheme(): {themeName: string, isDark: boolean} {\n    const themeAsString = localStorage.getItem(this.THEME_KEY);\n    return themeAsString ? JSON.parse(themeAsString) : {};\n  }\n\n  /**\n   * Removes a project.\n   * \n   * @param   {Project}             project   The project to remove\n   * @return  {Array<Project>}                Projects after the deletion\n   */\n  removeProject(project: Project): Array<Project> {\n    const currentResume = this.retrieveResume();\n    currentResume.projects = currentResume.projects.filter(s => s.name !== project.name);\n    this.saveResume(currentResume);\n    return currentResume.projects;\n  }\n\n  /**\n   * Update resume personal information.\n   */\n  updateSummary(name: string, profileUrl: string, description: string, title: string,\n                phone: string, email: string): Resume {\n    const currentResume = this.retrieveResume();\n    currentResume.name = name;\n    currentResume.pictureUrl = profileUrl;\n    currentResume.summary = description;\n    currentResume.title = title;\n    currentResume.phone = phone;\n    currentResume.email = email;\n    this.saveResume(currentResume);\n    return currentResume;\n  }\n\n  /**\n   * Parse and save a resume stored in the standardized json resume format (https://github.com/jsonresume/resume-schema/blob/0.0.0/schema.json)\n   * \n   * @param jsonResume A json resume object\n   */\n  parseAndSaveJsonResume(jsonResume) {\n    const basics = jsonResume.basics;\n    const resume: Resume = {\n      name: basics.name,\n      title: basics.label,\n      summary: basics.summary,\n      phone: basics.phone,\n      email: basics.email,\n      pictureUrl: basics.picture,\n      positions: jsonResume.work.map(w => {\n        const sd = this.dateAsYearMonth(new Date(w.startDate));\n        const ed = w.endDate ? this.dateAsYearMonth(new Date(w.endDate)) : null;\n        return {\n          title: w.position,\n          summary: w.summary,\n          startDate: sd,\n          endDate: ed,\n          current: ed === null,\n          company: w.company\n        }\n      }),\n      educations: jsonResume.education.map(e => {\n        const sd = this.dateAsYearMonth(new Date(e.startDate));\n        const ed = e.endDate ? this.dateAsYearMonth(new Date(e.endDate)) : null;\n        return {\n          school: e.institution,\n          field: e.area,\n          startDate: sd,\n          endDate: ed,\n          current: ed === null,\n          degree: e.studyType\n        }\n      }),\n      skills: jsonResume.skills.map(s => {\n        return {\n          name: s.name,\n          competence: 0\n        }\n      }),\n      projects: jsonResume.projects.map(p => {\n        const sd = this.dateAsYearMonth(new Date(p.startDate));\n        const ed = p.endDate ? this.dateAsYearMonth(new Date(p.endDate)) : null;\n        return {\n          name: p.name,\n          description: p.summary,\n          startDate: sd,\n          endDate: ed,\n          current: ed === null,\n          web: p.url\n        }\n      })\n    }\n    this.saveResume(resume);\n\n    // Tell components resume has changed\n    this.resumeChanged.emit(resume);\n  }\n\n  /**\n   * @return {YearAndMonth}   Todays date as YearAndMonth object\n   */\n  todayAsYearMonth(): YearAndMonth {\n    return this.dateAsYearMonth(new Date());\n  }\n\n  /**\n   * @return  {YearAndMonth}   A date as YearAndMonth object\n   */\n  dateAsYearMonth(d: Date): YearAndMonth {\n    return d ? {\n      year: d.getUTCFullYear(),\n      month: d.getUTCMonth()\n    } : null\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/resume.service.ts","module.exports = \"<!-- Summary -->\\n<div class=\\\"app-content\\\" [ngClass]=\\\"cssClasses()\\\">\\n    <div *ngIf=\\\"resumeService.editMode\\\" class=\\\"theme-switch\\\">\\n        <md-select placeholder=\\\"Theme\\\" [(ngModel)]=\\\"currentTheme\\\" (change)=\\\"themeChanged(currentTheme, darkTheme)\\\">\\n            <md-option *ngFor=\\\"let theme of themes\\\" [value]=\\\"theme\\\">{{ theme.name }}</md-option>\\n        </md-select>\\n        <md-slide-toggle [(ngModel)]=\\\"darkTheme\\\" (change)=\\\"themeChanged(currentTheme, darkTheme)\\\">Dark</md-slide-toggle>\\n    </div>\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\" fxLayoutAlign=\\\"space-between stretch\\\" fxLayoutWrap>\\n        <aside fxFlex=\\\"30\\\" class=\\\"summary\\\">\\n            <app-summary [picture]=\\\"resume.pictureUrl\\\" [name]=\\\"resume.name\\\" [description]=\\\"resume.summary\\\" [title]=\\\"resume.title\\\" [phone]=\\\"resume.phone\\\"\\n                [email]=\\\"resume.email\\\" [skills]=\\\"resume.skills\\\">\\n            </app-summary>\\n        </aside>\\n\\n\\n        <section fxFlex=\\\"70\\\">\\n            <!-- Work experience -->\\n            <app-experience [positions]=\\\"resume.positions\\\">\\n            </app-experience>\\n\\n            <!-- Education -->\\n            <app-education [educations]=\\\"resume.educations\\\">\\n            </app-education>\\n\\n            <!-- Projects -->\\n            <app-project [projects]=\\\"resume.projects\\\">\\n            </app-project>\\n        </section>\\n    </div>\\n\\n    <!-- Footer -->\\n    <div class=\\\"footer\\\">\\n        Generated with <a class=\\\"mat-link\\\" href=\\\"https://github.com/karmats/resume-generator\\\" target=\\\"_homepage\\\">resume generator</a>\\n    </div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/resume/resume.component.html\n// module id = ../../../../../src/app/resume/resume.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ResumeService } from '../resume.service';\nimport { Resume } from '../models';\n\n@Component({\n  selector: 'app-resume',\n  templateUrl: './resume.component.html'\n})\nexport class ResumeComponent implements OnInit {\n\n  resume: Resume;\n  themes: Array<any> = [\n    { name: 'Blue grey', value:'blue-grey' },\n    { name: 'Indigo', value: 'indigo' },\n    { name: 'Light blue', value:'light-blue' },\n    { name: 'Orange', value:'orange' },\n    { name: 'Purple', value:'purple' },\n    { name: 'Teal', value:'teal' }\n  ];\n  currentTheme: any;\n  darkTheme: boolean = false;\n\n  constructor(private resumeService: ResumeService) {\n  }\n\n  ngOnInit() {\n    this.resume = this.resumeService.retrieveResume();\n\n    // Listen to resume changed events\n    this.resumeService.resumeChanged.subscribe(resume => this.resume = resume);\n\n    // Retrieve theme\n    const theme = this.resumeService.retrieveTheme();\n    if (theme && theme.themeName) {\n      this.currentTheme = this.themes.filter(t => t.value === theme.themeName).pop();\n      this.darkTheme = theme.isDark;\n    } else {\n      // Indigo default theme\n      this.currentTheme = this.themes[1];\n      this.darkTheme = false;\n    }\n    this.darkTheme ? document.body.classList.add('dark') : document.body.classList.remove('dark');\n  }\n\n  cssClasses() {\n    return this.currentTheme.value + (this.darkTheme ? ' dark' : '');\n  }\n\n  themeChanged(theme, dark) {\n    this.resumeService.updateTheme(this.currentTheme.value, this.darkTheme);\n    this.darkTheme ? document.body.classList.add('dark') : document.body.classList.remove('dark');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/resume/resume.component.ts","module.exports = \"<div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\"\\n    fxLayoutAlign=\\\"space-between stretch\\\" fxLayoutWrap>\\n  <div *ngFor=\\\"let skill of skills\\\" fxFlex=\\\"90\\\">\\n    <span>{{skill.name}}</span>\\n    <button *ngIf=\\\"resumeService.editMode\\\" md-icon-button color=\\\"secondary\\\" (click)=\\\"editSkill(skill)\\\">\\n      <md-icon>edit</md-icon>\\n    </button>\\n    <button *ngIf=\\\"resumeService.editMode\\\" md-icon-button color=\\\"secondary\\\" (click)=\\\"deleteSkill(skill)\\\">\\n      <md-icon>delete</md-icon>\\n    </button>\\n    <md-progress-bar class=\\\"skill-bar\\\" color=\\\"primary\\\" mode=\\\"determinate\\\" value=\\\"{{skill.competence}}\\\"></md-progress-bar>\\n  </div>\\n</div>\\n<md-card-actions *ngIf=\\\"resumeService.editMode\\\">\\n  <button md-button color=\\\"secondary\\\" (click)=\\\"newSkill()\\\">Add Skill</button>\\n</md-card-actions>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/skill/skill.component.html\n// module id = ../../../../../src/app/skill/skill.component.html\n// module chunks = main","import { Component, Input, ViewContainerRef, OnInit } from '@angular/core';\nimport { MdDialog, MdDialogRef, MdDialogConfig } from '@angular/material';\n\nimport { ResumeService } from '../resume.service';\nimport { Skill } from '../models';\nimport { ConfirmDialogComponent } from '../confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-skill',\n  templateUrl: './skill.component.html'\n})\nexport class SkillComponent implements OnInit {\n  @Input() skills:Array<Skill>;\n\n  constructor(private dialog: MdDialog, private resumeService: ResumeService, private viewContainerRef: ViewContainerRef) {\n  }\n\n  ngOnInit() {\n    this.skills = this.skills || [];\n    this.sortSkills();\n  }\n\n  newSkill() {\n    const config = new MdDialogConfig();\n    config.width = \"75vw\";\n    const dialogRef = this.dialog.open(SkillDialog, config);\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.skills = this.resumeService.addSkill(result);\n        this.sortSkills();\n      }\n    });\n  }\n\n  editSkill(skill: Skill) {\n    const config = new MdDialogConfig();\n    config.width = \"75vw\";\n    config.viewContainerRef = this.viewContainerRef;\n\n    const dialogRef = this.dialog.open(SkillDialog, config);\n    dialogRef.componentInstance.skill = skill;\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.skills = result ? this.resumeService.updateSkills(this.skills) :\n            this.resumeService.retrieveResume().skills;\n      this.sortSkills();\n    });\n  }\n\n  deleteSkill(skill: Skill) {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, config);\n    dialogRef.componentInstance.message = `Are you sure you want to remove your skill in ${skill.name}?`;\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.skills = this.resumeService.removeSkill(skill);\n      }\n    })\n  }\n\n  // Sort by competence first, name second\n  private sortSkills() {\n    this.skills.sort((a, b) => {\n      if (a.competence !== b.competence) {\n        return b.competence - a.competence;\n      }\n      return a.name > b.name ? 1 : -1\n    });\n  }\n}\n\n// Add new skill dialog\n@Component({\n  template: `\n    <h3 md-dialog-title>{{editMode ? 'Edit ' : 'Add new '}}skill</h3>\n    <div md-dialog-content fxLayout=\"column\">\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"skill.name\"\n          placeholder=\"Skill name\">\n      </md-input-container>\n      <md-slider\n        [(ngModel)]=\"skill.competence\"\n        min=\"0\"\n        max=\"100\"\n        thumbLabel\n        step=\"10\"\n        tickInterval=\"1\"></md-slider>\n    </div>\n    <div md-dialog-actions>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">Cancel</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(skill)\">Save</button>\n    </div>\n  `,\n})\nexport class SkillDialog implements OnInit {\n  public skill: Skill;\n  public editMode: boolean;\n\n  constructor(public dialogRef: MdDialogRef<SkillDialog>, private resumeService: ResumeService) {\n    const today = new Date();\n    this.skill = {\n      competence: 0,\n      name: ''\n    }\n  }\n\n  ngOnInit() {\n    // Assume edit mode if name isn't blank\n    this.editMode = this.skill && this.skill.name.length > 0;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/skill/skill.component.ts","module.exports = \"<div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\" class=\\\"text-center space-up\\\">\\n        <div fxFlex><h1 style=\\\"margin-bottom:0\\\">{{name}}</h1></div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\" class=\\\"text-center space-down\\\">\\n        <div fxFlex>{{title}}</div>\\n    </div>\\n\\n    <div class=\\\"text-center\\\">\\n        <img *ngIf=\\\"profileUrl && profileUrl.length\\\" class=\\\"profile-picture\\\" [src]=\\\"profileUrl\\\" alt=\\\"Profile picture\\\">\\n        <md-icon *ngIf=\\\"!profileUrl || !profileUrl.length\\\" svgIcon=\\\"account-circle\\\" class=\\\"profile-picture\\\"></md-icon>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\" class=\\\"space-up\\\">\\n        <div fxFlex=\\\"25\\\" class=\\\"text-center\\\">\\n            <md-icon>person</md-icon>\\n        </div>\\n        <div fxFlex><div class=\\\"description\\\">{{description}}</div></div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\" class=\\\"space-up\\\">\\n        <div fxFlex=\\\"25\\\" class=\\\"text-center\\\">\\n            <md-icon>phone</md-icon>\\n        </div>\\n        <div fxFlex>{{phone}}</div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\" class=\\\"space-up\\\">\\n        <div fxFlex=\\\"25\\\" class=\\\"text-center\\\">\\n            <md-icon>email</md-icon>\\n        </div>\\n        <div fxFlex>{{email}}</div>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayout.sm=\\\"column\\\" fxLayout.xs=\\\"column\\\" class=\\\"space-up\\\">\\n        <div fxFlex=\\\"25\\\" class=\\\"text-center\\\">\\n            <md-icon>settings</md-icon>\\n        </div>\\n        <div fxFlex>\\n            <app-skill [skills]=\\\"skills\\\">\\n            </app-skill>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"resumeService.editMode\\\" class=\\\"actions\\\">\\n        <button md-raised-button color=\\\"primary\\\" (click)=\\\"editSummary()\\\">Edit profile</button>\\n        <input id=\\\"resumeFile\\\" style=\\\"display:none\\\" *ngIf=\\\"resumeService.editMode\\\" type=\\\"file\\\" accept=\\\"application/json\\\" (change)=\\\"uploadResume($event)\\\">\\n        <label for=\\\"resumeFile\\\" class=\\\"mat-primary mat-raised-button\\\">Upload Resume</label>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/mats/Development/projects/other/resume-generator/src/app/summary/summary.component.html\n// module id = ../../../../../src/app/summary/summary.component.html\n// module chunks = main","import { Component, Input, OnInit, ViewContainerRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { MdDialog, MdDialogRef, MdDialogConfig, MdIconRegistry } from '@angular/material';\n\nimport { ResumeService } from '../resume.service';\nimport { Skill } from '../models';\n\ninterface Summary {\n  name: string;\n  profileUrl: string;\n  description: string;\n  title: string;\n  phone: string;\n  email: string;\n}\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.component.html'\n})\nexport class SummaryComponent implements OnInit {\n  @Input() name: string;\n  @Input('picture') profileUrl: string;\n  @Input() description: string;\n  @Input() title: string;\n  @Input() phone: string;\n  @Input() email: string;\n  @Input() skills: Array<Skill>;\n  \n\n  constructor(private dialog: MdDialog, private viewContainerRef: ViewContainerRef, private resumeService: ResumeService,\n            private iconRegistry: MdIconRegistry, private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    // Profile picture placeholder\n    this.iconRegistry.addSvgIcon(\n        'account-circle',\n        this.sanitizer.bypassSecurityTrustResourceUrl('assets/images/svg/account_circle.svg'));\n  }\n\n  editSummary() {\n    const config = new MdDialogConfig();\n    config.viewContainerRef = this.viewContainerRef;\n    config.width = \"75vw\";\n\n    const dialogRef = this.dialog.open(EditSummaryDialog, config);\n    dialogRef.componentInstance.summary = {\n      name: this.name,\n      profileUrl: this.profileUrl,\n      description: this.description,\n      title: this.title,\n      phone: this.phone,\n      email: this.email\n    }\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!result) {\n        return;\n      }\n      const resume = this.resumeService.updateSummary(result.name, result.profileUrl,\n          result.description, result.title, result.phone, result.email);\n      this.name = resume.name;\n      this.profileUrl = resume.pictureUrl;\n      this.description = resume.summary;\n      this.title = resume.title;\n      this.phone = resume.phone;\n      this.email = resume.email;\n    });\n  }\n\n  uploadResume(event) {\n    const resumeFile: File = event.target.files[0];\n    const reader = new FileReader();\n\n    // Callback when the file has been read\n    reader.onload = () => {\n      if (reader && reader.result && reader) {\n        const jsonResume = JSON.parse(reader.result);\n        this.resumeService.parseAndSaveJsonResume(jsonResume);\n      }\n    }\n\n    if (resumeFile) {\n      reader.readAsText(resumeFile, 'UTF-8');\n    }\n  }\n}\n\n// Edit summary dialog\n@Component({\n  template: `\n    <h3 md-dialog-title>Edit summary</h3>\n    <div md-dialog-content fxLayout=\"column\">\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"summary.name\"\n          placeholder=\"Your name\">\n      </md-input-container>\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"summary.profileUrl\"\n          placeholder=\"Url to profile picture\">\n      </md-input-container>\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"summary.title\"\n          placeholder=\"Job title\">\n      </md-input-container>\n      <md-input-container>\n        <textarea mdInput\n        [(ngModel)]=\"summary.description\"\n        rows=\"4\" placeholder=\"Description of yourself\"></textarea>\n      </md-input-container>\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"summary.phone\"\n          placeholder=\"Your phone number\">\n      </md-input-container>\n      <md-input-container>\n        <input mdInput\n          [(ngModel)]=\"summary.email\"\n          placeholder=\"Your email adress\">\n      </md-input-container>\n    </div>\n    <div md-dialog-actions>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close()\">Cancel</button>\n      <button md-button color=\"primary\" (click)=\"dialogRef.close(summary)\">Ok</button>\n    </div>\n  `,\n})\nexport class EditSummaryDialog {\n  public summary: Summary;\n\n  constructor(public dialogRef: MdDialogRef<EditSummaryDialog>) {\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/app/summary/summary.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/environments/environment.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/mats/Development/projects/other/resume-generator/src/main.ts"],"sourceRoot":"webpack:///"}